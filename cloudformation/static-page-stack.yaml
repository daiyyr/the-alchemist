AWSTemplateFormatVersion: '2010-09-09'

Description: Static website hosting with CloudFront and S3

Metadata:
  Author: 
    - Teemo Dai

Resources:

  MyStaticWebsiteBucket:
    DeletionPolicy: Retain
    UpdateReplacePolicy: Retain
    Type: AWS::S3::Bucket
    Properties:
      BucketName: the-alchemist.link
      WebsiteConfiguration:
        IndexDocument: index.html
        ErrorDocument: 404.html
      PublicAccessBlockConfiguration:
        BlockPublicPolicy: false
        RestrictPublicBuckets: false

  MyStaticWebsiteBucketWww:
    DeletionPolicy: Retain
    UpdateReplacePolicy: Retain
    Type: AWS::S3::Bucket
    Properties:
      BucketName: www.the-alchemist.link
      WebsiteConfiguration:
        IndexDocument: index.html
        ErrorDocument: 404.html
      PublicAccessBlockConfiguration:
        BlockPublicPolicy: false
        RestrictPublicBuckets: false

  BucketPolicy:
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket: !Ref MyStaticWebsiteBucket
      PolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal: "*"
              # Service: cloudfront.amazonaws.com # this is for bucket origin. we use bucket public access origin
            Action: s3:GetObject
            Resource: arn:aws:s3:::the-alchemist.link/*
            # Condition:
            #   StringEquals:
            #     AWS:SourceArn: !Sub "arn:aws:cloudfront::654654455942:distribution/${CloudFrontDistribution}"
            # # this is for bucket origin. we use bucket public access origin

  BucketPolicyWww:
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket: !Ref MyStaticWebsiteBucketWww
      PolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal: "*"
            Action: s3:GetObject
            Resource: arn:aws:s3:::www.the-alchemist.link/*

  CloudFrontOriginAccessControl:
    Type: AWS::CloudFront::OriginAccessControl
    Properties:
      OriginAccessControlConfig:
        Description: "origin access control(OAC) for allowing cloudfront to access S3 bucket"
        Name: the-alchemist
        OriginAccessControlOriginType: s3
        SigningBehavior: always
        SigningProtocol: sigv4


  CloudFrontDistribution:
    Type: AWS::CloudFront::Distribution
    DependsOn:
      - MyStaticWebsiteBucket
    Properties:
      DistributionConfig:
        Origins:
          - DomainName: the-alchemist.link.s3-website-ap-southeast-2.amazonaws.com
            Id: the-alchemist
            CustomOriginConfig:
              OriginProtocolPolicy: http-only
        Enabled: "true"
        DefaultRootObject: index.html
        CustomErrorResponses:
          - ErrorCode: 404
            ResponseCode: 404
            ResponsePagePath: /404.html
          - ErrorCode: 403
            ResponseCode: 200
            ResponsePagePath: /index.html
        HttpVersion: http3
        Aliases:
          - the-alchemist.link
          - www.the-alchemist.link # this requires the same name s3 bucket exists (www.the-alchemist.link), so if we want to enable an alias, we are actually hosting one more website
        ViewerCertificate:
          # To use a certificate in AWS Certificate Manager (ACM) to require HTTPS between viewers and CloudFront, make sure you request (or import) the certificate in the US East (N. Virginia) Region (us-east-1).
          # https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/cnames-and-https-requirements.html
          AcmCertificateArn: arn:aws:acm:us-east-1:654654455942:certificate/6abe4215-e63e-4332-8d49-22af40fbb361
          MinimumProtocolVersion: TLSv1.2_2021
          SslSupportMethod: sni-only
        DefaultCacheBehavior:
          TargetOriginId: the-alchemist
          CachePolicyId: !Ref CloudfrontCachePolicy
          AllowedMethods:
            - DELETE
            - GET
            - HEAD
            - OPTIONS
            - PATCH
            - POST
            - PUT
          Compress: true
          ViewerProtocolPolicy: redirect-to-https

  CloudfrontCachePolicy:
    Type: AWS::CloudFront::CachePolicy
    Properties:
      CachePolicyConfig:
        Name: the-alchemist-cache-policy
        DefaultTTL: 60
        MaxTTL: 31536000
        MinTTL: 0
        ParametersInCacheKeyAndForwardedToOrigin:
          CookiesConfig: 
            CookieBehavior: none
          EnableAcceptEncodingBrotli: true
          EnableAcceptEncodingGzip: true
          HeadersConfig:
            HeaderBehavior: whitelist
            Headers:
              - Host
              - X-Original-Host
          QueryStringsConfig:
            QueryStringBehavior: all

  Route53AliasRecordZoneApex:
    Type: AWS::Route53::RecordSet
    Properties:
      Name: the-alchemist.link
      Type: A
      HostedZoneId: Z06958611JDYVCG41K93R
      AliasTarget:
        DNSName: !GetAtt CloudFrontDistribution.DomainName
        HostedZoneId: Z2FDTNDATAQYW2
        # For CloudFront distributions, the value is always Z2FDTNDATAQYW2
        # https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-route53-recordset-aliastarget.html#cfn-route53-recordset-aliastarget-hostedzoneid

  Route53AliasRecord:
    Type: AWS::Route53::RecordSet
    Properties:
      Name: www.the-alchemist.link
      Type: A
      HostedZoneId: Z06958611JDYVCG41K93R
      AliasTarget:
        DNSName: !GetAtt CloudFrontDistribution.DomainName
        HostedZoneId: Z2FDTNDATAQYW2


  # If monthly forcast or actual exceed $1, send alert email and remove R53 record (to prevent ddos)
  MonthlyBudget:
    Type: "AWS::Budgets::Budget"
    Properties:
      Budget:
        BudgetLimit:
          Amount: 10
          Unit: USD
        BudgetType: COST
        TimeUnit: MONTHLY
        # Start and End should be of type Long in Epoch Seconds. use https://www.epochconverter.com/
        TimePeriod:
          Start: 1717113600 # 2024-06-01

      NotificationsWithSubscribers:
        - Notification:
            NotificationType: FORECASTED
            ComparisonOperator: GREATER_THAN
            Threshold: 100
          Subscribers:
            - SubscriptionType: EMAIL
              Address: teeemo.dai@gmail.com
            - SubscriptionType: SNS
              Address: !ImportValue BudgetSNSTopicARN
        - Notification:
            NotificationType: ACTUAL
            ComparisonOperator: GREATER_THAN
            Threshold: 100
          Subscribers:
            - SubscriptionType: EMAIL
              Address: teeemo.dai@gmail.com
            - SubscriptionType: SNS
              Address: !ImportValue BudgetSNSTopicARN

  TopicPolicy:
    Type: AWS::SNS::TopicPolicy
    Properties:
      Topics: 
        - !ImportValue BudgetSNSTopicARN
      PolicyDocument:
        Statement:
          - Sid: AllowServices
            Effect: Allow
            Principal:
              Service:
                - budgets.amazonaws.com
            Action: 'SNS:Publish'
            Resource:
              - !ImportValue BudgetSNSTopicARN
          - Sid: AllowAWSConsoleTrigger
            Effect: Allow
            Principal:
              AWS: !Sub "arn:aws:iam::${AWS::AccountId}:root"
            Action: 'SNS:Publish'
            Resource:
              - !ImportValue BudgetSNSTopicARN
            Condition:
              StringEquals:
                AWS:SourceOwner: "*"
